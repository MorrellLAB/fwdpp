var searchData=
[
  ['sample',['sample',['../da/d8b/namespaceKTfwd.html#a9d603c400915590bf1a1e7a46a8322d6',1,'KTfwd::sample(gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#aadac84cc69a96aaf2b06dccad184d45d',1,'KTfwd::sample(const poptype &amp;p, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a6081f8ddfce3f7f042e37c89eccdc453',1,'KTfwd::sample(gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a30469ffce9b4e01877e05f013af8211a',1,'KTfwd::sample(const poptype &amp;p, const unsigned deme, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)']]],
  ['sample_5fdiploid',['sample_diploid',['../da/d8b/namespaceKTfwd.html#a0a185fec49aa68f3435e003b377cafd1',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a9a7f827b21d3636be8a71da340097942',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double f=0., const mutation_removal_policy mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a674902659248af902ae428f418d6a3ac',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t *N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function_container &amp;ffs, const migration_policy &amp;mig, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double *f=nullptr, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a376bde02d9bcda0ee32100079dc3db00',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t *N_curr, const uint_t *N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function_container &amp;ffs, const migration_policy &amp;mig, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double *f=nullptr, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#a952e146623f0fa81af9c775e1ae0893d',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N_curr, const uint_t &amp;N_next, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../da/d8b/namespaceKTfwd.html#ab65e589e7cb4ec9ded9c10b7df33e15e',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_cont_type&lt; gamete_type, gamete_cont_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; &amp;diploids, mutation_cont_type&lt; mutation_type, mutation_cont_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const uint_t &amp;N, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0, const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#acd05c7f7a84f7a5419e3b6abd326f0d0',1,'KTfwd::experimental::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_list_type&lt; mutation_type, mutation_list_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const unsigned &amp;N_curr, const unsigned &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0., const popmodel_rules &amp;pmr=popmodel_rules(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#ac340a62a656eab864caf1ac4cc5e02d3',1,'KTfwd::experimental::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; &amp;gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; &amp;diploids, mutation_list_type&lt; mutation_type, mutation_list_type_allocator &gt; &amp;mutations, std::vector&lt; uint_t &gt; &amp;mcounts, const unsigned &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const diploid_fitness_function &amp;ff, typename gamete_type::mutation_container &amp;neutral, typename gamete_type::mutation_container &amp;selected, const double &amp;f=0., const popmodel_rules &amp;pmr=popmodel_rules(), const mutation_removal_policy &amp;mp=mutation_removal_policy(), const gamete_insertion_policy &amp;gpolicy_mut=gamete_insertion_policy())']]],
  ['sample_5findividuals',['sample_individuals',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#ad68da449d2e4b52f82a0215253679fa3',1,'KTfwd::fwdpp_internal']]],
  ['sample_5fseparate',['sample_separate',['../da/d8b/namespaceKTfwd.html#a4d285867f4ab51bcf96b9f15b6d084ec',1,'KTfwd::sample_separate(gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a1d40d58a4eade0c600dae2d49e7d4e74',1,'KTfwd::sample_separate(const poptype &amp;p, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#ae088cfdafdc1d97f930edbef55519838',1,'KTfwd::sample_separate(gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a6aa96fa979edaa0eb6290148022f7a4e',1,'KTfwd::sample_separate(const poptype &amp;p, const unsigned deme, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)']]],
  ['selected',['selected',['../d3/de0/classKTfwd_1_1sugar_1_1metapop.html#a78578b2d707b5dc01a2b284f2748d4f1',1,'KTfwd::sugar::metapop::selected(spop.selected)'],['../d3/de0/classKTfwd_1_1sugar_1_1metapop.html#a5750ee02048c19585763ad7754487e6d',1,'KTfwd::sugar::metapop::selected(std::move(spop.selected))']]],
  ['serialize',['serialize',['../d0/d8e/structKTfwd_1_1serialize.html#a937d57bce91c9ea44ae680c23ee0a05b',1,'KTfwd::serialize::serialize()'],['../d0/d8e/structKTfwd_1_1serialize.html#a54921e070f9f7f638473ac588f0f87f3',1,'KTfwd::serialize::serialize(serialize &amp;&amp;__s)']]],
  ['setup3locus2',['setup3locus2',['../d9/d1d/mlocusCrossoverTest_8cc.html#a9a07134a7568b8e289547f79637a7439',1,'mlocusCrossoverTest.cc']]],
  ['shmodel',['shmodel',['../db/dbe/structKTfwd_1_1extensions_1_1shmodel.html#aaa049c7b1aab90734b178a1143cf8398',1,'KTfwd::extensions::shmodel::shmodel()=default'],['../db/dbe/structKTfwd_1_1extensions_1_1shmodel.html#a85cf3b9a18c42e35d3b9b252aa81ec2f',1,'KTfwd::extensions::shmodel::shmodel(std::function&lt; double(gsl_rng *)&gt; sfxn, std::function&lt; double(gsl_rng *)&gt; hfxn)']]],
  ['simple_5fgaussian',['simple_gaussian',['../d5/d77/HOC__ind_8cc.html#a2901d45d8ce4ab6814f5c7ee72448012',1,'HOC_ind.cc']]],
  ['simulate',['simulate',['../da/d34/sugar__metapop__custom__diploid_8cc.html#a1e606ae3de9354470917a1fc1ec852c3',1,'simulate(poptype &amp;pop):&#160;sugar_metapop_custom_diploid.cc'],['../d4/d8f/sugar__multilocus_8cc.html#a1e606ae3de9354470917a1fc1ec852c3',1,'simulate(poptype &amp;pop):&#160;sugar_multilocus.cc'],['../db/dc1/sugar__singlepop_8cc.html#a0ba6afde78fba68ae28fdd968179a49a',1,'simulate(singlepop_t &amp;pop):&#160;sugar_singlepop.cc'],['../dc/d4e/sugar__singlepop__custom__diploid_8cc.html#a0ba6afde78fba68ae28fdd968179a49a',1,'simulate(singlepop_t &amp;pop):&#160;sugar_singlepop_custom_diploid.cc']]],
  ['singlepop',['singlepop',['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#a8d72a3fba43d636592cf935d903a9e48',1,'KTfwd::sugar::singlepop']]],
  ['split_5fdeme',['split_deme',['../dc/d14/group__demography.html#ga8de952fb08c47603eb572f3047b78f8f',1,'KTfwd']]],
  ['split_5fdeme_5fdetails',['split_deme_details',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a93bdd5d4029282d6c27bf47e65aca5f1',1,'KTfwd::fwdpp_internal']]],
  ['split_5fdeme_5fno_5freplacement',['split_deme_no_replacement',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a11e3372ad3329bf75003ee981db3e3e4',1,'KTfwd::fwdpp_internal']]],
  ['split_5fdeme_5freplacement',['split_deme_replacement',['../de/dbd/namespaceKTfwd_1_1fwdpp__internal.html#a0ca7c658f9248230dcfb49fef9d11fed',1,'KTfwd::fwdpp_internal']]],
  ['split_5fpop',['split_pop',['../da/d8b/namespaceKTfwd.html#a1d6297fa16edff06255eefcbb7ac140d',1,'KTfwd']]],
  ['standardwfrules',['standardWFrules',['../dc/d8a/structKTfwd_1_1experimental_1_1standardWFrules.html#a6e8d00e04d117e88c13979d0a805f028',1,'KTfwd::experimental::standardWFrules']]],
  ['swap_5fdemes',['swap_demes',['../dc/d14/group__demography.html#gaf0123b287b34e04d773d224ab021067d',1,'KTfwd']]],
  ['swap_5fpops',['swap_pops',['../da/d8b/namespaceKTfwd.html#a60f658b75c95eae2bd13fcc0cd55f6e8',1,'KTfwd']]]
];
