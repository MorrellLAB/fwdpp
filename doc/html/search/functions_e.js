var searchData=
[
  ['sample',['sample',['../da/d8b/namespaceKTfwd.html#a9d603c400915590bf1a1e7a46a8322d6',1,'KTfwd::sample(gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#aadac84cc69a96aaf2b06dccad184d45d',1,'KTfwd::sample(const poptype &amp;p, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a6081f8ddfce3f7f042e37c89eccdc453',1,'KTfwd::sample(gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a30469ffce9b4e01877e05f013af8211a',1,'KTfwd::sample(const poptype &amp;p, const unsigned deme, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)']]],
  ['sample_5fdiploid',['sample_diploid',['../da/d8b/namespaceKTfwd.html#a18df6351fa3148914bbb844c36bc3e05',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0)'],['../da/d8b/namespaceKTfwd.html#a37bfd39cb9e480156946dc9969bde8e6',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N_curr, const unsigned &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0)'],['../da/d8b/namespaceKTfwd.html#a44bc3d0dbb6b092f56ba18331751af77',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *metapop, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned *N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function_container &amp;ffs, const mutation_removal_policy &amp;mp, const migration_policy &amp;mig, const double *f=nullptr)'],['../da/d8b/namespaceKTfwd.html#ad592697866c4bacdf00ccb6e902c0891',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *metapop, metapop_diploid_vector_type&lt; diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt;, metapop_diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned *N_curr, const unsigned *N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function_container &amp;ffs, const mutation_removal_policy &amp;mp, const migration_policy &amp;mig, const double *f=nullptr)'],['../da/d8b/namespaceKTfwd.html#aaffceb4a238f2a75a05512a8c717aa49',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N_curr, const unsigned &amp;N_next, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0)'],['../da/d8b/namespaceKTfwd.html#af37e12388574a535d7162b2b8b4fa343',1,'KTfwd::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; locus_vector_type&lt; diploid_geno_t, locus_vector_type_allocator &gt;, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N, const double *mu, const mutation_model_container &amp;mmodel, const recombination_policy_container &amp;rec_policies, const double *r_between_loci, const bw_locus_rec_fxn &amp;blrf, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0)'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#af860f7a2f4258b585c113ab5ae7f73b7',1,'KTfwd::experimental::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N_curr, const unsigned &amp;N_next, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0., const popmodel_rules &amp;pmr=popmodel_rules())'],['../d5/d8a/namespaceKTfwd_1_1experimental.html#a6371ed5e9dd2635fc7fa90e73f8dbc70',1,'KTfwd::experimental::sample_diploid(gsl_rng *r, gamete_list_type&lt; gamete_type, gamete_list_type_allocator &gt; *gametes, diploid_vector_type&lt; diploid_geno_t, diploid_vector_type_allocator &gt; *diploids, mutation_list_type&lt; typename gamete_type::mutation_type, mutation_list_type_allocator &gt; *mutations, const unsigned &amp;N_curr, const double &amp;mu, const mutation_model &amp;mmodel, const recombination_policy &amp;rec_pol, const mutation_insertion_policy &amp;mpolicy, const gamete_insertion_policy &amp;gpolicy_mut, const diploid_fitness_function &amp;ff, const mutation_removal_policy &amp;mp, const double &amp;f=0., const popmodel_rules &amp;pmr=popmodel_rules())']]],
  ['sample_5fseparate',['sample_separate',['../da/d8b/namespaceKTfwd.html#a4d285867f4ab51bcf96b9f15b6d084ec',1,'KTfwd::sample_separate(gsl_rng *r, const poptype &amp;p, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a1d40d58a4eade0c600dae2d49e7d4e74',1,'KTfwd::sample_separate(const poptype &amp;p, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#ae088cfdafdc1d97f930edbef55519838',1,'KTfwd::sample_separate(gsl_rng *r, const poptype &amp;p, const unsigned deme, const unsigned nsam, const bool removeFixed)'],['../da/d8b/namespaceKTfwd.html#a6aa96fa979edaa0eb6290148022f7a4e',1,'KTfwd::sample_separate(const poptype &amp;p, const unsigned deme, const std::vector&lt; unsigned &gt; &amp;individuals, const bool removeFixed)']]],
  ['sample_5fsfs',['sample_sfs',['../da/d8b/namespaceKTfwd.html#a9d9d58d1446e2d4a5aae1e5c4e7ba946',1,'KTfwd']]],
  ['serialize',['serialize',['../d0/d8e/structKTfwd_1_1serialize.html#a937d57bce91c9ea44ae680c23ee0a05b',1,'KTfwd::serialize::serialize()'],['../d0/d8e/structKTfwd_1_1serialize.html#a54921e070f9f7f638473ac588f0f87f3',1,'KTfwd::serialize::serialize(serialize &amp;&amp;__s)']]],
  ['setup3locus2',['setup3locus2',['../d9/d1d/mlocusCrossoverTest_8cc.html#aaaa8c80d6b37ed1d36ceb6877cc5c3b9',1,'mlocusCrossoverTest.cc']]],
  ['simple_5fgaussian',['simple_gaussian',['../d5/d77/HOC__ind_8cc.html#a25b24674eef2892e7f54af399c90de3b',1,'HOC_ind.cc']]],
  ['singlepop',['singlepop',['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#a1676434a1c143640bbe6995db2e58c37',1,'KTfwd::sugar::singlepop::singlepop(const unsigned &amp;popsize, typename gamete_t::mutation_container::size_type reserve_size=100)'],['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#ad5ceee626ccca760c35bf4163cd2597b',1,'KTfwd::sugar::singlepop::singlepop(singlepop &amp;)=delete'],['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#af6cf145e08886d0a09cf3a4ebcdaf04d',1,'KTfwd::sugar::singlepop::singlepop(const singlepop &amp;)=delete'],['../d5/d74/classKTfwd_1_1sugar_1_1singlepop.html#a12256a30e7082e1058c2fdffbeb3f0c2',1,'KTfwd::sugar::singlepop::singlepop(singlepop &amp;&amp;)=default']]],
  ['singlepop_5fserialized',['singlepop_serialized',['../d9/dee/classKTfwd_1_1sugar_1_1singlepop__serialized.html#aa5fd980d13bc2c0031bbc6265a654045',1,'KTfwd::sugar::singlepop_serialized::singlepop_serialized(const unsigned &amp;popsize, typename gamete_t::mutation_container::size_type reserve_size=100)'],['../d9/dee/classKTfwd_1_1sugar_1_1singlepop__serialized.html#a0100d3454e0b16d28eab5b9b953bde67',1,'KTfwd::sugar::singlepop_serialized::singlepop_serialized(const singlepop_serialized &amp;pop)'],['../d9/dee/classKTfwd_1_1sugar_1_1singlepop__serialized.html#a7370c23dc5dc1fc2bbed65089dc9fd0e',1,'KTfwd::sugar::singlepop_serialized::singlepop_serialized(singlepop_serialized &amp;&amp;)=default']]],
  ['standardwfrules',['standardWFrules',['../dc/d8a/structKTfwd_1_1experimental_1_1standardWFrules.html#a6e8d00e04d117e88c13979d0a805f028',1,'KTfwd::experimental::standardWFrules']]]
];
